<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html
        PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
    <title>Constretto - Reference Manual ver. 1.0</title>
    <script type="text/javascript" src="js/sh_main.js"></script>
    <script type="text/javascript" src="js/sh_java.js"></script>
    <script type="text/javascript" src="js/sh_properties.js"></script>
    <script type="text/javascript" src="js/sh_xml.js"></script>
    <script type="text/javascript" src="js/jquery-1.2.6.js"></script>
    <script type="text/javascript" src="js/document-builder.js"></script>
    <link rel="stylesheet" href="css/constretto.css"/>
    <link rel="stylesheet" href="css/sh_ide-idea.css"/>
</head>

<body>

<div class="header"/>

<p class="title">Constretto - Reference Manual ver. 1.0</p>

<div class="toc"/>

<div class="section" id="introduction" title="Introduction">

    Constretto is a configuration and assembly management framework for Java applications. bla bla

</div>


<div class="section" id="concepts" title="Concepts">

    <div class="subsection" id="configurationStore" title="Configuration Store">
        Configuration Store acts as Constrettos bridge between different sources of configuration. There are 4
        configuration stores delivered as a part of Constretto, and you may also implement your own store by
        implementing the ConfigurationStore interface.
    </div>

    <div class="subsection" id="expressions" title="Expressions">

    </div>

    <div class="subsection" id="tags" title="Tags">
        <p>
            In Constretto all configuration expressions may be tagged in much the same way as we see in web 2.0 tagging
            of content. These tag is later used to set up a full set of configuration for your application. Each
            expression may have multiple tags. When starting a Constretto enabled application, you spesify a list of
            tags that are valid for the given session, in Constretto is called configuration context, and all
            expressions that are not in that list will be discarded. If an expression has values in more than one of the
            tags allowed for the current session, the value of the expression found first in the allowed tags will be
            used.
        </p>
    </div>
    <div class="subsection" id="configurationContext" title="Configuration Context">
        <pre class="sh_sh">
            java -jar myapp.jar MyMain -DCONSTRETTO_TAGS=development,linux,mock
        </pre>

        <pre class="sh_sh">
            export CONSTRETTO_TAGS=development.linux,mock
            java -jar myapp.jar MyMain
        </pre>

        
    </div>
    <div class="subsection" id="variableReplacement" title="Variable Replacement"></div>
    <div class="subsection" id="propertyOverriding" title="Property Overriding"></div>
    <div class="subsection" id="configurationInjection" title="Configuration Injection"></div>
</div>

<div class="section" id="supportedConfigurationFormats" title="Supported Configuration Formats">
    <div class="subsection" id="iniFIles" title="Ini Files">
        <p class="example">Example ini file:</p>
        <pre class="sh_properties">
        [default]
            key1 = a value
            key2 = a value

        [some tag]
            key1 = other value
            key2 = other value
        </pre>
    </div>

    <div class="subsection" id="propertyFiles" title="Property Files">
        <p class="example">Example property file:</p>
        <pre class="sh_properties">
        key1 = a value
        key2 = a value

        @some tag.key1 = other value
        @some tag.key2 = other value
        </pre>
    </div>

    <div class="subsection" id="javaBeans" title="JavaBeans">

        <p class="example">Example JavaBean:</p>
        <blockquote class="code java">
            <p><span class="annotation">@ConfigurationSource</span>(basePath = <span
                    class="value">"datasources.customer"</span>, tag = <span class="value">"development"</span>)</p>

            <p><span class="reserved">public class</span> DevelopmentCustomerDataSourceConfigurer {</p>
            <br></br>

            <p><span class="reserved ident">public</span> String getUrl() {</p>

            <p><span class="reserved ident ident-2">return</span> <span class="value">"development-url"</span>;</p>

            <p><span class="ident">}</span></p>
            <br></br>

            <p><span class="reserved ident">public</span> String getUsername() {</p>

            <p><span class="reserved ident-2">return</span> <span class="value">"development-username"</span>;</p>

            <p><span class="ident">}</span></p>
            <br></br>

            <p><span class="reserved ident">public</span> String getPassword() {</p>

            <p><span class="reserved ident-2">return</span> <span class="value">"development-password"</span>;</p>

            <p><span class="ident">}</span></p>

            <p>}</p>
        </blockquote>
    </div>
</div>
<pre class="sh_java">
@Test
public void simpleLookupForExistingKeyUsingDefaultValue() {
    ConstrettoConfiguration config = prepareTests();
    assertEquals("key1-value", config.evaluateTo("key1", "default-key-value"));
}
</pre>
<div class="section" id="constrettoJavaAPI" title="Constretto Java API">
    <div class="subsection" id="configurationBuilder" title="Constretto Configuration Builder">

        <p class="example">Example builder:</p>


    </div>
    <div class="subsection" id="clientAPI" title="ConstrettoConfiguration Client API"></div>
</div>

<div class="section" id="springIntegration" title="Spring Integration">
    <div class="subsection" id="xmlNamespace" title="Constretto Namespace"></div>
    <div class="subsection" id="assemblyContext" title="Assembly Context"></div>
    <div class="subsection" id="propertyPlaceHolder" title="Property Placeholder Configurer"></div>
</div>


<div class="section" id="bestPractices" title="Best Practices"></div>

</body>
</html>